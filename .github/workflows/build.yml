name: build
on: [ push ]
jobs:
  build:
    runs-on: ${{ matrix.os-name }}-latest
    strategy:
      matrix:
        os-name: [ windows, macos, ubuntu ]
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.x
      - name: install ubuntu dependencies
        if: ${{ matrix.os-name == 'ubuntu' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake
      - name: run scripts
        shell: bash
        run: |
          python scripts/install_fnalibs.py
      - name: build
        shell: bash
        run: |
          dotnet build -c Release -o bin
      - name: create artifact
        uses: yodasoda1219/create-package@v2.1
        id: artifact
        with:
          config: ${{ github.workspace }}/artifact-description.json
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-${{ matrix.os-name }}
          path: ${{ steps.artifact.outputs.path }}
      - name: create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ steps.artifact.outputs.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}